<ref *1> Queue {
    tracks: [],
    previousTracks: [
      Track {
        id: '992117266193711105',
        title: 'The Best of Classical Music üéª Mozart, Beethoven, Bach, Chopin, Vivaldi üéπ Most Famous Classic Pieces',
        author: 'Just Instrumental Music',
        url: 'https://www.youtube.com/watch?v=jgpJVI3tDbY',
        thumbnail: 'https://i.ytimg.com/vi_webp/jgpJVI3tDbY/maxresdefault.webp',
        duration: '03:28:20',
        views: 128594655,
        requestedBy: [User],
        playlist: undefined
      }
    ],
    playing: true,
    metadata: undefined,
    repeatMode: 0,
    id: '992117253686296576',
    _streamTime: 0,
    _cooldownsTimeout: Collection(0) [Map] {},
    _activeFilters: [],
    _filtersUpdate: false,
    onBeforeCreateStream: null,
    player: <ref *2> Player {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      options: {
        autoRegisterExtractor: true,
        ytdlOptions: [Object],
        connectionTimeout: 20000
      },
      queues: Collection(1) [Map] { '232930633783967744' => [Circular *1] },
      voiceUtils: VoiceUtils { cache: [Collection [Map]] },
      extractors: Collection(0) [Map] {},
      requiredEvents: [ 'error', 'connectionError' ],
      client: Client {
        _events: [Object: null prototype],
        _eventsCount: 4,
        _maxListeners: undefined,
        options: [Object],
        rest: [RESTManager],
        _cleanups: [Set],
        _finalizers: FinalizationRegistry {},
        ws: [WebSocketManager],
        actions: [ActionsManager],
        voice: [ClientVoiceManager],
        shard: null,
        users: UserManager {},
        guilds: GuildManager {},
        channels: ChannelManager {},
        sweepers: [Sweepers],
        presence: [ClientPresence],
        user: [ClientUser],
        application: [ClientApplication],
        readyAt: 2022-06-30T17:16:21.612Z,
        slashcommands: [Collection [Map]],
        player: [Circular *2],
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    },
    guild: <ref *3> Guild {
      id: '232930633783967744',
      name: 'Dank Dragons',
      icon: '2e4889185949291fd332cd935d689614',
      features: [
        'ANIMATED_ICON',
        'INVITE_SPLASH',
        'THREE_DAY_THREAD_ARCHIVE',
        'TEXT_IN_VOICE_ENABLED'
      ],
      commands: GuildApplicationCommandManager {
        permissions: [ApplicationCommandPermissionsManager],
        guild: [Circular *3]
      },
      members: GuildMemberManager { guild: [Circular *3] },
      channels: GuildChannelManager { guild: [Circular *3] },
      bans: GuildBanManager { guild: [Circular *3] },
      roles: RoleManager { guild: [Circular *3] },
      presences: PresenceManager {},
      voiceStates: VoiceStateManager { guild: [Circular *3] },
      stageInstances: StageInstanceManager { guild: [Circular *3] },
      invites: GuildInviteManager { guild: [Circular *3] },
      scheduledEvents: GuildScheduledEventManager { guild: [Circular *3] },
      available: true,
      shardId: 0,
      splash: null,
      banner: null,
      description: null,
      verificationLevel: 'NONE',
      vanityURLCode: null,
      nsfwLevel: 'DEFAULT',
      premiumSubscriptionCount: 2,
      discoverySplash: null,
      memberCount: 15,
      large: false,
      premiumProgressBarEnabled: false,
      applicationId: null,
      afkTimeout: 300,
      afkChannelId: null,
      systemChannelId: null,
      premiumTier: 'TIER_1',
      explicitContentFilter: 'DISABLED',
      mfaLevel: 'NONE',
      joinedTimestamp: 1564825080987,
      defaultMessageNotifications: 'ALL_MESSAGES',
      systemChannelFlags: SystemChannelFlags { bitfield: 0 },
      maximumMembers: 500000,
      maximumPresences: null,
      approximateMemberCount: null,
      approximatePresenceCount: null,
      vanityURLUses: null,
      rulesChannelId: null,
      publicUpdatesChannelId: null,
      preferredLocale: 'en-US',
      ownerId: '223800736809615360',
      emojis: GuildEmojiManager { guild: [Circular *3] },
      stickers: GuildStickerManager { guild: [Circular *3] }
    },
    options: {
      leaveOnEnd: true,
      leaveOnStop: true,
      leaveOnEmpty: true,
      leaveOnEmptyCooldown: 1000,
      autoSelfDeaf: true,
      ytdlOptions: {
        quality: 'highestaudio',
        highWaterMark: 33554432,
        requestOptions: [Object]
      },
      initialVolume: 100,
      bufferingTimeout: 3000,
      spotifyBridge: true,
      disableVolume: false,
      volumeSmoothness: 0.08
    },
    connection: StreamDispatcher {
      _events: [Object: null prototype] {
        error: [Function (anonymous)],
        debug: [Function (anonymous)],
        start: [Function (anonymous)],
        finish: [Function (anonymous)]
      },
      _eventsCount: 4,
      _maxListeners: undefined,
      connectionTimeout: 20000,
      readyLock: false,
      voiceConnection: G {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        rejoinAttempts: 0,
        _state: [Object],
        joinConfig: [Object],
        packets: [Object],
        receiver: [j],
        debug: null,
        onNetworkingClose: [Function: bound onNetworkingClose],
        onNetworkingStateChange: [Function: bound onNetworkingStateChange],
        onNetworkingError: [Function: bound onNetworkingError],
        onNetworkingDebug: [Function: bound onNetworkingDebug],
        [Symbol(kCapture)]: false
      },
      audioPlayer: B {
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        _state: [Object],
        subscribers: [Array],
        behaviors: [Object],
        debug: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      channel: VoiceChannel {
        type: 'GUILD_VOICE',
        guild: [Guild],
        guildId: '232930633783967744',
        parentId: '541307055521136641',
        permissionOverwrites: [PermissionOverwriteManager],
        messages: [MessageManager],
        nsfw: false,
        id: '351134324701265923',
        name: 'üç∑VIP Zoneüç∑',
        rawPosition: 2,
        rtcRegion: null,
        bitrate: 128000,
        userLimit: 0,
        videoQualityMode: null,
        lastMessageId: null,
        rateLimitPerUser: 0
      },
      paused: false,
      audioResource: T {
        playStream: [Encoder],
        edges: [Array],
        metadata: [Track],
        volume: [VolumeTransformer],
        encoder: [Encoder],
        audioPlayer: [B],
        playbackDuration: 1931080,
        started: true,
        silencePaddingFrames: 5,
        silenceRemaining: -1
      },
      [Symbol(kCapture)]: false
    }
  } Error: aborted
      at connResetException (node:internal/errors:691:14)
      at TLSSocket.socketCloseListener (node:_http_client:402:19)
      at TLSSocket.emit (node:events:538:35)
      at node:net:687:12
      at TCP.done (node:_tls_wrap:580:7) {
    code: 'ECONNRESET'
  }
  (node:28131) Warning: [DiscordPlayerWarning] Unhandled "error" event! Events "error", "connectionError" must have event listeners!
  (Use `node16 --trace-warnings ...` to show where the warning was created)
  <ref *1> Queue {
    tracks: [],
    previousTracks: [
      Track {
        id: '992117266193711105',
        title: 'The Best of Classical Music üéª Mozart, Beethoven, Bach, Chopin, Vivaldi üéπ Most Famous Classic Pieces',
        author: 'Just Instrumental Music',
        url: 'https://www.youtube.com/watch?v=jgpJVI3tDbY',
        thumbnail: 'https://i.ytimg.com/vi_webp/jgpJVI3tDbY/maxresdefault.webp',
        duration: '03:28:20',
        views: 128594655,
        requestedBy: [User],
        playlist: undefined
      }
    ],
    playing: true,
    metadata: undefined,
    repeatMode: 0,
    id: '992117253686296576',
    _streamTime: 0,
    _cooldownsTimeout: Collection(0) [Map] {},
    _activeFilters: [],
    _filtersUpdate: false,
    onBeforeCreateStream: null,
    player: <ref *2> Player {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      options: {
        autoRegisterExtractor: true,
        ytdlOptions: [Object],
        connectionTimeout: 20000
      },
      queues: Collection(1) [Map] { '232930633783967744' => [Circular *1] },
      voiceUtils: VoiceUtils { cache: [Collection [Map]] },
      extractors: Collection(0) [Map] {},
      requiredEvents: [ 'error', 'connectionError' ],
      client: Client {
        _events: [Object: null prototype],
        _eventsCount: 4,
        _maxListeners: undefined,
        options: [Object],
        rest: [RESTManager],
        _cleanups: [Set],
        _finalizers: FinalizationRegistry {},
        ws: [WebSocketManager],
        actions: [ActionsManager],
        voice: [ClientVoiceManager],
        shard: null,
        users: UserManager {},
        guilds: GuildManager {},
        channels: ChannelManager {},
        sweepers: [Sweepers],
        presence: [ClientPresence],
        user: [ClientUser],
        application: [ClientApplication],
        readyAt: 2022-06-30T17:16:21.612Z,
        slashcommands: [Collection [Map]],
        player: [Circular *2],
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    },
    guild: <ref *3> Guild {
      id: '232930633783967744',
      name: 'Dank Dragons',
      icon: '2e4889185949291fd332cd935d689614',
      features: [
        'ANIMATED_ICON',
        'INVITE_SPLASH',
        'THREE_DAY_THREAD_ARCHIVE',
        'TEXT_IN_VOICE_ENABLED'
      ],
      commands: GuildApplicationCommandManager {
        permissions: [ApplicationCommandPermissionsManager],
        guild: [Circular *3]
      },
      members: GuildMemberManager { guild: [Circular *3] },
      channels: GuildChannelManager { guild: [Circular *3] },
      bans: GuildBanManager { guild: [Circular *3] },
      roles: RoleManager { guild: [Circular *3] },
      presences: PresenceManager {},
      voiceStates: VoiceStateManager { guild: [Circular *3] },
      stageInstances: StageInstanceManager { guild: [Circular *3] },
      invites: GuildInviteManager { guild: [Circular *3] },
      scheduledEvents: GuildScheduledEventManager { guild: [Circular *3] },
      available: true,
      shardId: 0,
      splash: null,
      banner: null,
      description: null,
      verificationLevel: 'NONE',
      vanityURLCode: null,
      nsfwLevel: 'DEFAULT',
      premiumSubscriptionCount: 2,
      discoverySplash: null,
      memberCount: 15,
      large: false,
      premiumProgressBarEnabled: false,
      applicationId: null,
      afkTimeout: 300,
      afkChannelId: null,
      systemChannelId: null,
      premiumTier: 'TIER_1',
      explicitContentFilter: 'DISABLED',
      mfaLevel: 'NONE',
      joinedTimestamp: 1564825080987,
      defaultMessageNotifications: 'ALL_MESSAGES',
      systemChannelFlags: SystemChannelFlags { bitfield: 0 },
      maximumMembers: 500000,
      maximumPresences: null,
      approximateMemberCount: null,
      approximatePresenceCount: null,
      vanityURLUses: null,
      rulesChannelId: null,
      publicUpdatesChannelId: null,
      preferredLocale: 'en-US',
      ownerId: '223800736809615360',
      emojis: GuildEmojiManager { guild: [Circular *3] },
      stickers: GuildStickerManager { guild: [Circular *3] }
    },
    options: {
      leaveOnEnd: true,
      leaveOnStop: true,
      leaveOnEmpty: true,
      leaveOnEmptyCooldown: 1000,
      autoSelfDeaf: true,
      ytdlOptions: {
        quality: 'highestaudio',
        highWaterMark: 33554432,
        requestOptions: [Object]
      },
      initialVolume: 100,
      bufferingTimeout: 3000,
      spotifyBridge: true,
      disableVolume: false,
      volumeSmoothness: 0.08
    },
    connection: StreamDispatcher {
      _events: [Object: null prototype] {
        error: [Function (anonymous)],
        debug: [Function (anonymous)],
        start: [Function (anonymous)],
        finish: [Function (anonymous)]
      },
      _eventsCount: 4,
      _maxListeners: undefined,
      connectionTimeout: 20000,
      readyLock: false,
      voiceConnection: G {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        rejoinAttempts: 0,
        _state: [Object],
        joinConfig: [Object],
        packets: [Object],
        receiver: [j],
        debug: null,
        onNetworkingClose: [Function: bound onNetworkingClose],
        onNetworkingStateChange: [Function: bound onNetworkingStateChange],
        onNetworkingError: [Function: bound onNetworkingError],
        onNetworkingDebug: [Function: bound onNetworkingDebug],
        [Symbol(kCapture)]: false
      },
      audioPlayer: B {
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        _state: [Object],
        subscribers: [Array],
        behaviors: [Object],
        debug: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      channel: VoiceChannel {
        type: 'GUILD_VOICE',
        guild: [Guild],
        guildId: '232930633783967744',
        parentId: '541307055521136641',
        permissionOverwrites: [PermissionOverwriteManager],
        messages: [MessageManager],
        nsfw: false,
        id: '351134324701265923',
        name: 'üç∑VIP Zoneüç∑',
        rawPosition: 2,
        rtcRegion: null,
        bitrate: 128000,
        userLimit: 0,
        videoQualityMode: null,
        lastMessageId: null,
        rateLimitPerUser: 0
      },
      paused: false,
      audioResource: T {
        playStream: [Encoder],
        edges: [Array],
        metadata: [Track],
        volume: [VolumeTransformer],
        encoder: [Encoder],
        audioPlayer: [B],
        playbackDuration: 1931080,
        started: true,
        silencePaddingFrames: 5,
        silenceRemaining: -1
      },
      [Symbol(kCapture)]: false
    }
  } R [Error]: aborted
      at connResetException (node:internal/errors:691:14)
      at TLSSocket.socketCloseListener (node:_http_client:402:19)
      at TLSSocket.emit (node:events:538:35)
      at node:net:687:12
      at TCP.done (node:_tls_wrap:580:7) {
    resource: T {
      playStream: Encoder {
        _readableState: [ReadableState],
        _events: [Object: null prototype],
        _eventsCount: 5,
        _maxListeners: undefined,
        _writableState: [WritableState],
        allowHalfOpen: true,
        encoder: null,
        _options: [Object],
        _required: 3840,
        _buffer: null,
        [Symbol(kCapture)]: false,
        [Symbol(kCallback)]: [Function: bound onwrite]
      },
      edges: [ [Object], [Object] ],
      metadata: Track {
        id: '992117266193711105',
        title: 'The Best of Classical Music üéª Mozart, Beethoven, Bach, Chopin, Vivaldi üéπ Most Famous Classic Pieces',
        author: 'Just Instrumental Music',
        url: 'https://www.youtube.com/watch?v=jgpJVI3tDbY',
        thumbnail: 'https://i.ytimg.com/vi_webp/jgpJVI3tDbY/maxresdefault.webp',
        duration: '03:28:20',
        views: 128594655,
        requestedBy: [User],
        playlist: undefined
      },
      volume: VolumeTransformer {
        _readableState: [ReadableState],
        _events: [Object: null prototype],
        _eventsCount: 5,
        _maxListeners: undefined,
        _writableState: [WritableState],
        allowHalfOpen: true,
        _readInt: [Function (anonymous)],
        _writeInt: [Function (anonymous)],
        _bits: 16,
        type: 's16le',
        _bytes: 2,
        _extremum: 32768,
        volume: 1,
        _targetVolume: 1,
        _chunk: null,
        _smoothing: 0.08,
        [Symbol(kCapture)]: false,
        [Symbol(kCallback)]: [Function: bound onwrite]
      },
      encoder: Encoder {
        _readableState: [ReadableState],
        _events: [Object: null prototype],
        _eventsCount: 5,
        _maxListeners: undefined,
        _writableState: [WritableState],
        allowHalfOpen: true,
        encoder: null,
        _options: [Object],
        _required: 3840,
        _buffer: null,
        [Symbol(kCapture)]: false,
        [Symbol(kCallback)]: [Function: bound onwrite]
      },
      audioPlayer: B {
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        _state: [Object],
        subscribers: [Array],
        behaviors: [Object],
        debug: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      playbackDuration: 1931080,
      started: true,
      silencePaddingFrames: 5,
      silenceRemaining: -1
    }
  }
  (node:28131) Warning: [DiscordPlayerWarning] Unhandled "connectionError" event! Events "error", "connectionError" must have event listeners!
  